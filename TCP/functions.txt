TCP连接中的函数
  1. socket函数
    1. 为了还行网络IO。进程必须先调用socket函数，指定期望的协议类型，返回一个socket描述符，这是一个监听套接字
  
  2. connect 函数
    connect 将激发三次握手过程，仅在链接建立或者失败的情况下返回。
    出错分为：
      1. 没有收到SYN分节响应，返回Etimeout错误
      2. 若SYN分节的响应是RST，则表示指定的进程端口没有进程等待与其连接
      3. destination unreachable错误
    在内次调用失败之后，必须close先前的套接字描述符并重新调用socket函数
  3.close 函数
    close函数是把套接字标记成已关闭，这只是把套接字的引用数建议，如果套接字的引用数为零，才会引起FIN 的发送。


  4. bind 函数
    是将本地协议地址赋予一个套接字，可以指定一个ip地址或者端口号，也可以都不指定

  5. listen 函数
    socket函数建立的套接字成为监听套接字。
    1. listen将一个未连接的监听套接字转换成一个被动套接字，将套接字的状态从close转化为listen
    2. listen 可以指定对应套接字排队的最大连接个数
    
    内核为每个监听套接字维护两个队列：
    1. 未完成链接队列：队列中的元素对应着一个SYN分节
    2. 已完成的连接队列： 每个完成三次握手的的客户协议地址对应其中的一项，这个队列的大小收到listen中自定的最大连接数的限制，
        当队列中的连接数达到最大时候，如果再有SYN分节到达，服务器将忽略改syn

  6. accept函数
    accept函数将从已完成的队列中返回下一个已完成的连接，如果队列为空，将阻塞。
    accept函数返回一个由内核自动生成的全新的套接字描述符，代表与客户的TCP连接


  两种套接字：
    1. 由socket函数返回的是监听套接字，这个套接字在服务器的生命周期内一直存在。
    2. 由accept函数返回的是已连接套接字，当服务器对客户的服务完成时，相应的已连接套接字就被关闭。

