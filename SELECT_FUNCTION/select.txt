I/O模型
  1. 阻塞是I/O: 进程通过系统调用来读取数据，如果数据暂时没有准备好，则进程阻塞，
      直到：
        1. 数据准备好
        2. 数据冲内核复制到用户空间

  2. 非阻塞I/O: 进程通过系统调用来读取数据，如果数据没有准备好，则返回一个错误。
                进程一直轮询的方式查询是否准备好数据，
                如果数据准备好了，则进程阻塞
                直到：
                  数据从内核赋值到进程空间


  3. I/O复用模型: 进程通过select或者poll来检测是否某个描述符可用，如果没有可用，则进程阻塞在select或者poll调用上
                  如果某个描述符可用，
                  则进程阻塞,
                  直到：
                    数据从内核复制到进程空间

  4. 信号驱动I/O模型: 
          1. 开启套接字的信号驱动I/O功能
          2. 注册一个信号处理程序
          3. 进程继续执行做其他事情
          4. 如果数据准备好，则内核发送信号，通知进程
          5. 进程停止做其他事情，停下来阻塞，
            直到：
              数据从内核复制到进程空间


  5. 异步I/O: 告诉内核启动某个操作，然后在操作完成后通知进程。
      1. 通过系统调用告诉内核准备数据。
      2. 数据准备好后，将数据从内核复制到进程空间。

      整个过程中，进程都不会阻塞


  6. select 函数
    1. select（int maxdfp1, readset, writeset,execptset, timeout）
      select 函数监控三个字符集上的描述符，直到
        1. 套接字准好读/写
        2. 读/写连接半部关闭
        3. 有一个套接字错误逮处理。
        4. 超时

  7. pselect 函数
    可以设置信号掩码
  8. poll 函数
    和select函数相似，但是可以测试套接字描述符的更多条件，而select只能测试套接字是否准备好
